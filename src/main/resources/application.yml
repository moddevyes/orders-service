spring:
  application:
    name: orders-service
  datasource:
    url: jdbc:mysql://${mysqldocker.orders.container.name:localhost}:3306/ecommerce_orders_db?&useSSL=false&allowPublicKeyRetrieval=true
    username: ${SPRING_DATASOURCE_USERNAME:davidking}
    password: ${SPRING_DATASOURCE_PASSWORD:davidking!!}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
  jackson:
    serialization:
      fail-on-empty-beans: false

server:
  port: 8004

eureka:
  instance:
    hostname: orders-service
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8761}/eureka

# docker custom variables
mysqldocker:
  accounts:
    container:
      name: accounts_mysql_container
  orders:
    container:
      name: orders_mysql_container
  products:
    container:
      name: products_mysql_container
  shipments:
    container:
      name: shipments_mysql_container

commerce:
  registry:
    user: eurekausr
    passwd: eurekapasswd
  clients:
    accounts:
      serviceName: accounts-service
      port: 8001
      baseUrl: http://${commerce.clients.accounts.serviceName:localhost}:8001
      findByAccountIdRefUrl: /accounts/{id}/reference